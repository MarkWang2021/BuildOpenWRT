# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
# Copyright (C) 2019 P3TERX
#
# Copyright (C) 2020 KFERMercer
#
name: OpenWrt-CI-x64-mini

on:
  schedule:
    - cron: 0 18 * * 4
  release:
    types: [published]
  workflow_dispatch:

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest
   
    steps:

      - name: Checkout
        uses: actions/checkout@main
       
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
          
      - name: Clone source code  
        run:  |
          git clone https://github.com/coolsnowwolf/lede.git openwrt
          git clone https://github.com/xiaorouji/openwrt-passwall.git -b luci 
              
      - name: Update feeds
        run: |
          cd openwrt
          cp ../feeds.conf.default feeds.conf.default
          cat feeds.conf.default
          ./scripts/feeds update -a
          #cp -r ../openwrt-passwall/luci-app-passwall ./feeds/passwall/
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Modify default configuration
        run: |
          cd openwrt
          echo "copy Custom passwall config file to 0_default_config" 
          cp ../passwall ./feeds/passwall/luci-app-passwall/root/usr/share/passwall/0_default_config
          cat ./feeds/passwall/luci-app-passwall/root/usr/share/passwall/0_default_config
        
          echo "Modify default IP to 10.70.228.225"
          sed -i 's/192.168.1.1/10.70.228.225/g' package/base-files/files/bin/config_generate



      - name: Generate configuration file
        run: | 
          cd openwrt
          cp ../x86-64-mini.config .config
          make defconfig
          cat .config | grep "^CONFIG_TARGET"
          cat .config | grep "^CONFIG_PACKAGE_luci-app"
                    
      - name: Make download
        run: |
          cd openwrt
          make download -j8
          find dl -size -1024c -exec rm -f {} \;

      - name: Compile firmware
        run: |
          cd openwrt
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin

      - name: Prepare artifact
        run: |
          cd openwrt
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cat .config | grep "^CONFIG_PACKAGE_luci-app" > ./bin/targets/luci-app.buildinfo
          cp .config ./bin/targets/fullconfig.buildinfo
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/          

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./openwrt/artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./openwrt/artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./openwrt/bin/targets/
  

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.REPTOKEN }}
          file: ./openwrt/artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
